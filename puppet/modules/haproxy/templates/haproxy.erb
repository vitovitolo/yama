global
	pidfile /var/run/haproxy_<%=@haproxy_name%>.pid
	stats socket /var/run/haproxy_<%=@haproxy_name%>.sock level admin
	log /dev/log   local0 info
	maxconn 64000
	user haproxy
	group haproxy
	daemon

defaults
	log     global
	mode    http
	option  tcplog
	option  dontlognull
	retries 3
	option  redispatch
	maxconn 10000
	timeout client 3s
	timeout server 3s
	timeout connect 3s
	timeout queue 3s
	timeout check 30s
	
        errorfile 400 /etc/haproxy/errors/400error.http
        errorfile 403 /etc/haproxy/errors/403error.http
        errorfile 408 /etc/haproxy/errors/408error.http
        errorfile 500 /etc/haproxy/errors/500error.http
        errorfile 502 /etc/haproxy/errors/502error.http
        errorfile 503 /etc/haproxy/errors/503error.http
        errorfile 504 /etc/haproxy/errors/504error.http

listen external
	bind <%=@ip%>:80

	mode http
	option httplog
	option http-server-close

	acl maintenancepath path_beg -i /maintenance

	# Blocked items
	block if maintenancepath

	default_backend back

	# Block errors (error personalizado)
	acl is_error status ge 400
	acl is_401_error status eq 401
	acl is_510_error status eq 510
	rspideny ^.*$ if is_error !is_510_error !is_401_error

#############
### Backends
#############
backend back
	mode http
	balance roundrobin
	option httpchk GET /status
	http-check expect rstring ok
	<% @backends.each do |node| -%>
	server <%=node['name']%> <%=node['hostname']%>:<%=node['port']%> check
	<% end -%>

### STATS
################
listen stats <%=@ip %>:8888
	mode http
	stats enable
	stats hide-version
	stats realm Haproxy\ Statistics
	stats uri /
	stats auth haproxy:haproxy

